import UIKit

public class PickFontAwesomeIconView: UIView {
  public static let icons = ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""]

  public var didSelect: ((String) -> Void)?
  public var itemBackgroundColor: UIColor = .groupTableViewBackground
  public var selectionColor: UIColor = UIView().tintColor
  public var iconSize: CGFloat = 30
  private var collectionView: CollectionInputView<String>?

  required init?(coder aDecoder: NSCoder) {
    super.init(coder: aDecoder)
  }

  public required init(
    itemBackgroundColor: UIColor = .groupTableViewBackground,
    selectionColor: UIColor = UIView().tintColor,
    didSelect: ((String) -> Void)?,
    height: CGFloat,
    iconSize: CGFloat = 30
    ) {
    let registered = UIFont.registerFont(
      bundle: Bundle(for: type(of: self)),
      fontName: "FontAwesome5FreeSolid900",
      fontExtension: "otf"
    )
    print(registered ? "Font registered" : "Failed")
    super.init(frame: CGRect(x: 0, y: 0, width: UIScreen.main.bounds.width, height: height))
    let font = UIFont(name: "FontAwesome5Free-Solid", size: iconSize)
    self.itemBackgroundColor = itemBackgroundColor
    self.selectionColor = selectionColor
    self.didSelect = didSelect
    translatesAutoresizingMaskIntoConstraints = false
    var selectedIcon = ""
    self.collectionView = CollectionInputView<String>(
      items: { () -> [String] in return PickFontAwesomeIconView.icons },
      didSelect: { icon in selectedIcon = icon; self.didSelect?(icon) },
      text: { icon in return icon },
      contains: { icon in return selectedIcon == icon },
      font: font ?? UIFont.systemFont(ofSize: iconSize),
      itemBackgroundColor: itemBackgroundColor,
      selectionColor: selectionColor, height: height
    )
    self.collectionView!.translatesAutoresizingMaskIntoConstraints = false
    addSubview(collectionView!)
    NSLayoutConstraint.activate([
      self.collectionView!.leadingAnchor.constraint(equalTo: leadingAnchor),
      self.collectionView!.trailingAnchor.constraint(equalTo: trailingAnchor),
      self.collectionView!.topAnchor.constraint(equalTo: topAnchor),
      self.collectionView!.bottomAnchor.constraint(equalTo: bottomAnchor)
      ])
  }

  override public func didMoveToWindow() {
    super.didMoveToWindow()
    layoutIfNeeded()
    collectionView?.frame = bounds
    collectionView?.collectionView.reloadData()
  }
}
